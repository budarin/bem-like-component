{
    "compilerOptions": {
        /* Дополнительные сведения об этом файле: https://aka.ms/tsconfig.json. */

        "resolveJsonModule": true,

        /* Базовые параметры */
        "incremental": true /* Включить инкрементную компиляцию */,
        "target": "esnext" /* Укажите целевую версию ECMAScript: "ES3" (по умолчанию), "ES5", "ES2015", "ES2016", "ES2017", "ES2018", "ES2019", "ES2020" или "ESNEXT". */,
        "module": "commonjs" /* Укажите создание кода модуля: "none", "commonjs", "amd", "system", "umd", "es2015", "es2020" или "ESNext". */,
        // "lib": [],                              /* Укажите файлы библиотек для включения в компиляцию. */
        "allowJs": true /* Разрешить компиляцию файлов javascript. */,
        // "checkJs": true,                        /* Сообщать об ошибках в JS-файлах. */
        "jsx": "react-jsx" /* Укажите вариант создания кода JSX: "preserve", "react-native" или "react". */,
        // "declaration": true,                    /* Создает соответствующий D.TS-файл. */
        // "declarationMap": true,                 /* Создает сопоставитель с исходным кодом для каждого соответствующего файла ".d.ts". */
        "sourceMap": false /* Создает соответствующий файл с расширением ".map". */,
        // "outFile": "./",                        /* Связать и вывести результаты в один файл. */
        "outDir": ".dist" /* Перенаправить структуру вывода в каталог. */,
        // "rootDir": "./",                        /* Укажите корневой каталог входных файлов. Используйте его для управления структурой выходных каталогов с --outDir. */
        // "composite": true,                      /* Включить компиляцию проекта */
        "tsBuildInfoFile": "./node_modules/.cache/tsc/" /* Указание файла для хранения сведений о добавочной компиляции */,
        "removeComments": false /* Не создавать комментарии в выходных данных. */,
        "noEmit": true /* Не создавать выходные данные. */,
        // "importHelpers": true,                  /* Импорт вспомогательных объектов, участвующих в порождении, из "tslib". */
        // "downlevelIteration": true,             /* Предоставление полной поддержки для итерируемых элементов в for-of, расширение и деструктуризация при выборе целевой платформы ES5 или ES3. */
        // "isolatedModules": true,                /* Транскомпиляция каждого файла как отдельного модуля (аналогично ts.transpileModule). */

        /* Дополнительные параметры */
        "locale": "ru" /* Языковой стандарт, который используется при отображении сообщений пользователю (например, en-us) */,
        "skipLibCheck": true /* Пропустить проверку типа файлов объявления. */,
        "forceConsistentCasingInFileNames": true /* Запретить ссылки с разным регистром, указывающие на один файл. */,

        /* Параметры строгой проверки типов */
        "strict": true /* Включить все параметры строгой проверки типов. */,
        "noImplicitAny": true /* Вызывать ошибку в выражениях и объявлениях с подразумеваемым типом any. */,
        "strictNullChecks": true /* Включить строгие проверки NULL. */,
        "strictFunctionTypes": true /* Включение строгой проверки типов функций. */,
        "strictBindCallApply": true /* Включите строгие методы "bind", "call" и "apply" для функций. */,
        "strictPropertyInitialization": true /* Включение строгой проверки инициализации свойств в классах. */,
        "noImplicitThis": true /* Вызвать ошибку в выражениях this с неявным типом any. */,
        "alwaysStrict": true /* Анализ в строгом режиме и создание директивы "use strict" для каждого исходного файла. */,

        /* Дополнительные проверки */
        "noUnusedLocals": true /* Сообщать об ошибках в неиспользованных локальных переменных. */,
        "noUnusedParameters": true /* Сообщать об ошибках в неиспользованных параметрах. */,
        "noImplicitReturns": true /* Сообщать об ошибке, если не все пути к коду в функции возвращают значение. */,
        "noFallthroughCasesInSwitch": true /* Сообщать об ошибках для случаев передачи управления в операторе switch. */,
        "noUncheckedIndexedAccess": true /* Включить undefined в результаты сигнатуры индекса */,

        /* Параметры разрешения модулей */
        "moduleResolution": "node" /* Укажите стратегию разрешения модуля: node (Node.js) или classic (TypeScript pre-1.6). */,
        "baseUrl": "./" /* Базовый каталог для разрешения неабсолютных имен модуля. */,
        // "paths": {},                            /* Серия записей, которая повторно сопоставляет импорты с расположениями поиска, заданными относительно baseUrl. */
        // "rootDirs": [],                         /* Список корневых папок, объединенное содержимое которых представляет структуру проекта во время выполнения. */
        // "typeRoots": [],                        /* Список папок, определения типов из которых будут включены. */
        // "types": [],                            /* Файлы объявления типа, включаемые в компиляцию. */
        "allowSyntheticDefaultImports": true /* Разрешить импорт по умолчанию из модулей без экспорта по умолчанию. Это не повлияет на выведение кода — только на проверку типов. */,
        "esModuleInterop": true /* Позволяет обеспечивать взаимодействие между модулями CommonJS и ES посредством создания объектов пространства имен для всех импортов. Подразумевает "allowSyntheticDefaultImports". */
        // "preserveSymlinks": true,               /* Не разрешать реальный путь symlink. */
        // "allowUmdGlobalAccess": true,           /* Разрешение обращения к глобальным значениям UMD из модулей. */

        /* Параметры сопоставления источников */
        // "sourceRoot": "",                       /* Укажите расположение, в котором отладчик должен найти файлы TypeScript вместо исходных расположений. */
        // "mapRoot": "",                          /* Укажите расположение, в котором отладчик должен найти файлы карты, вместо созданных расположений. */
        // "inlineSourceMap": true,                /* Порождать один файл с сопоставлениями источников, а не создавать отдельный файл. */
        // "inlineSources": true,                  /* Порождать источник вместе с сопоставителями с исходным кодом в одном файле (нужно задать параметр --inlineSourceMap или --sourceMap). */

        /* Экспериментальные параметры */
        // "experimentalDecorators": true,         /* Включает экспериментальную поддержку для декораторов ES7. */
        // "emitDecoratorMetadata": true,          /* Включает экспериментальную поддержку для создания метаданных типа для декораторов. */
    },
    "include": ["src", "webpack.config.js"],
    "exclude": ["**/node_modules", "**/.*/", "dist", "config"]
}
